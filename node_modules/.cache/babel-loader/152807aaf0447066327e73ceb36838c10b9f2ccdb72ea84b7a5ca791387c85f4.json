{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\ni18n\n// Load translation using http -> see /public/locales (default)\n// Will make requests to `/locales/en/translation.json` etc.\n.use(Backend)\n// Detect user language\n// Learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)\n// Pass the i18n instance to react-i18next.\n.use(initReactI18next)\n// Initialize i18next\n// For all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  fallbackLng: 'en',\n  debug: process.env.NODE_ENV === 'development',\n  load: 'languageOnly',\n  // load only the language code, not the country dialect\n  interpolation: {\n    escapeValue: false // Not needed for React as it escapes by default\n  },\n  react: {\n    useSuspense: true // Use Suspense to handle the loading state of translation files\n  },\n  backend: {\n    // Path where resources get loaded from. Can be a function.\n    loadPath: '/locales/{{lng}}/translation.json'\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","LanguageDetector","Backend","use","init","fallbackLng","debug","process","env","NODE_ENV","load","interpolation","escapeValue","react","useSuspense","backend","loadPath"],"sources":["E:/TaxBlue/Checkout/Checkout/Hyperswitch-React-Demo-App/src/i18n.js"],"sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n  // Load translation using http -> see /public/locales (default)\r\n  // Will make requests to `/locales/en/translation.json` etc.\r\n  .use(Backend)\r\n  // Detect user language\r\n  // Learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // Pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // Initialize i18next\r\n  // For all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: process.env.NODE_ENV === 'development',\r\n    load: 'languageOnly', // load only the language code, not the country dialect\r\n    interpolation: {\r\n      escapeValue: false, // Not needed for React as it escapes by default\r\n    },\r\n    react: {\r\n      useSuspense: true, // Use Suspense to handle the loading state of translation files\r\n    },\r\n    backend: {\r\n      // Path where resources get loaded from. Can be a function.\r\n      loadPath: '/locales/{{lng}}/translation.json',\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,OAAO,MAAM,sBAAsB;AAE1CH;AACE;AACA;AAAA,CACCI,GAAG,CAACD,OAAO;AACZ;AACA;AAAA,CACCC,GAAG,CAACF,gBAAgB;AACrB;AAAA,CACCE,GAAG,CAACH,gBAAgB;AACrB;AACA;AAAA,CACCI,IAAI,CAAC;EACJC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;EAC7CC,IAAI,EAAE,cAAc;EAAE;EACtBC,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK,CAAE;EACtB,CAAC;EACDC,KAAK,EAAE;IACLC,WAAW,EAAE,IAAI,CAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEJ,eAAejB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}